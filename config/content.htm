<h1>期末報告</h1>
<p><strong>五精一甲   50733108  陳振輝</strong></p>
<p><span></span></p>
<p>請別對此作業抱有太大期望 </p>
<p><span>期中的分數是亂打的</span></p>
<p><span>並沒有抱持著什麼偉大理想而輸入分數</span></p><h1>1.網路連線設定</h1>
<p>(1)按下右上方的3點線並進入"設定"(setting)</p>
<p>(2)滑到底下按下"進階"(advanced)</p>
<p>(3)點擊倒數第2個"系統"(system)裡的"開啟proxy設定"(open proxy setting)</p>
<p>(4)按下"Lan設定"</p>
<p>(5)"位址"可改變所連的網路 。</p>
<p>       連接埠旁的"進階"可設定:不為開頭為下列項目的位址使用proxy伺服器。</p>
<p><span style="color: #ff0000;">Btw </span></p>
<p><span style="color: #ff0000;">1.</span>&lt;140.130&gt;開頭的網址沒有加密；&lt;192.168&gt;有加密 閒雜人等無法連上</p>
<p><span style="color: #ff0000;">2.</span>IPV6能力大於<span>IPV4</span></p>
<p><span><span style="color: #ff0000;">3</span>.140.130.17為學校網路開頭 後面接".數字"來確認連上哪台  53為最強</span></p><h1>2.配置可攜程式環境</h1>
<p>將存在於USB中的"cd2019_cdb_w5"打開(此操作只可在Window10系統打開)</p>
<p>"start.bat"為打開環境；"stop.bat"為停止運作</p>
<p><span style="background-color: #ffffff; color: #00ccff;">輸入指示各功能</span></p>
<p>c:   切換到C槽。  反之  "Y:"為切入"Y槽"</p>
<p>cd  切換根目錄(資料夾)。可一次性大量切換 Ex.   cd tmp\repo\ssh\cmstest</p>
<p>cd..   跳出根目錄  返回到上個根目錄</p>
<p>dir  查看所在目錄內容</p>
<p>mkdir (make directory)  建立一個資料夾  可隨意命名 Ex. 取名為  " ssh"</p>
<p>cls  清除之前指示的顯示內容</p>
<p></p>
<p></p><h1>3.倉儲改版</h1>
<p><span style="background-color: #ffcc99;">先擁有Github的倉儲</span></p>
<p><span style="background-color: #ffffff;"> clone 倉儲至近端工作後, 對遠端倉儲改版</span></p>
<p><span style="background-color: #ffffff;"><span>可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令</span><br/><br/><span>建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版.</span><br/><br/><span>另一類則是在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端.</span></span></p>
<p><span style="background-color: #ffcc99;"></span>git add .   將使用者對近端網(動態網)的更動做一個拍快照的動作</p>
<p>git commit  :  將上述的快照提交至倉儲  </p>
<p>git push  :  將使用者對近態網的更改傳到靜端網(遠端網)上並更改                                                                            (git push時是用config裡的"URL協定"完成)</p>
<p><span>git config --edit --system  :  編輯近端設定  輸入:wq (write quit)來離開編輯頁。</span><span>我們編輯的目的為去除"要求登入的小視窗"  因為系統會自動記憶輸入的帳號而且每次都要輸入也麻煩  所以清除它來防隱私跟去麻煩   但是需要下面指令來自動登入並達成各式指令</span></p>
<p><span>ssh-keygen -t rsa -b 4096 -C "username(學號)" :   建立公鑰及私鑰並將公鑰放入github的ssh key  完成以上動作時完成自動登入動作  可省略輸入帳號密碼這步驟即可擁有權限來進行指令 Ex. git commit</span></p>
<p><span></span>git status  :  確認系統是否改版成功</p>
<p>python wsgi.py : 連上動態網(須連上對應跟目錄才可叫出)</p>
<p>kungit  :  利用樹狀圖來直接確認git push 是否成功或者可直接在那上面push</p>
<p></p>
<p></p><h1>亂數抽選</h1>
<p></p>
<p></p>
<div class="line number1 index0 alt2"><code class="html plain"></code></div>
<p><button onclick="myFunction()">Start</button></p>
<p id="demo"></p>
<script>// <![CDATA[
// <![CDAIA[
function myFunction(){
 document.getElementById("demo").innerHTML = Math.floor(Math.random()*50+1);
 //document.getElementById("demo").innerHTML ="Start";
 alert("Here You Are");
}
// ]]></script><h1>資料來源</h1>
<p><code class="html string">嚴家銘老師的期末示範網: <a href="http://cpgx.kmol.info/wcm2019/content/index.html">http://cpgx.kmol.info/wcm2019/content/index.html</a></code></p><h1>期中報告</h1>
<p>很隨便的期中作業 :  <a href="https://www.youtube.com/watch?v=XOHeedUke1c">https://www.youtube.com/watch?v=XOHeedUke1c</a></p>